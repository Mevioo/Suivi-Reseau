name: Python CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-lint-coverage:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install coverage flake8 pylint

    - name: Run unit tests with coverage
      run: |
        coverage run --source=src -m unittest discover -s tests
        coverage report -m
        coverage html

    - name: Upload HTML coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-html-${{ matrix.python-version }}
        path: htmlcov/

    - name: Enforce coverage threshold
      run: |
        coverage report --fail-under=90

    - name: Run Flake8
      run: |
        flake8 src tests

    - name: Run Pylint and enforce score
      run: |
        pylint src/scanner.py > pylint-report.txt || true
        cat pylint-report.txt
        score=$(grep "Your code has been rated at" pylint-report.txt | awk '{print $7}' | cut -d"/" -f1)
        if (( $(echo "$score < 9.0" | bc -l) )); then
          echo "❌ Pylint score $score is below threshold"
          exit 1
        fi

    - name: Upload pylint report
      uses: actions/upload-artifact@v4
      with:
        name: pylint-report-${{ matrix.python-version }}
        path: pylint-report.txt
